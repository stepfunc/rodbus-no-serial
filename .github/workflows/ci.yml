name: CI
env:
  $RODBUS_TAG: df952d8721d9d5ec21d3977f1e5fb76a42175f07
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
jobs:
  # Build bindings on Windows x64 [64-bit MSVC (Windows 7+) (x86_64-pc-windows-msvc)] and x86 [32-bit MSVC (Windows 7+) (i686-pc-windows-msvc)]
  bindings-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc # 64-bit MSVC (Windows 7+)
            extra-param: # nothing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: stepfunc/rodbus
          ref: $RODBUS_TAG
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Copy Windows config
        shell: pwsh
        run: Copy-Item -Path .cargo/config-windows.toml -Destination .cargo/config.toml
      - name: Caching
        uses: Swatinem/rust-cache@v2
      - name: Create log dir
        run: mkdir logs\${{ matrix.target }}
      - name: Build FFI
        run: cargo build -p rodbus-ffi --release --no-default-features --features tls --target ${{ matrix.target }} --message-format json | Out-File -encoding "UTF8" .\logs\${{ matrix.target }}\build.ffi.log
      - name: Upload Build Logs
        uses: actions/upload-artifact@v3
        with:
          name: ffi-modules
          path: logs
      - name: Upload compiled FFI modules
        uses: actions/upload-artifact@v3
        with:
          name: ffi-modules
          path: ffi/bindings/c/generated/${{ matrix.target }}/lib
  # Cross-compilation for ARM devices and produce C bindings
  cross:
    strategy:
      fail-fast: false
      matrix:
        target:
          - arm-unknown-linux-gnueabihf # ARMv6 Linux, hardfloat (kernel 3.2, glibc 2.17)
          - aarch64-unknown-linux-gnu # ARM64 Linux (kernel 4.2, glibc 2.17+)
          - x86_64-unknown-linux-gnu # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: stepfunc/rodbus
          ref: $RODBUS_TAG
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install Rust Cross
        run: cargo install cross
      - name: Create Log Dir
        run: mkdir -p logs/${{ matrix.target }}
      - name: Build FFI
        run: cargo build -p rodbus-ffi --release --no-default-features --features tls --target ${{ matrix.target }} --message-format json > logs/${{ matrix.target }}/build.ffi.log
      - name: Upload Build Logs
        uses: actions/upload-artifact@v3
        with:
          name: ffi-modules
          path: logs
      - name: Upload compiled FFI modules
        uses: actions/upload-artifact@v3
        with:
          name: ffi-modules
          path: ffi/bindings/c/generated/${{ matrix.target }}/lib